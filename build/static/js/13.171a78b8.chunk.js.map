{"version":3,"sources":["constants/ChartConstant.js","components/shared-components/ChartWidget/index.js","components/shared-components/CustomStatistic/index.js","components/shared-components/DataDisplayWidget/index.js","components/shared-components/StatisticWidget/index.js","components/util-components/DemoFrame/index.js","views/app-views/home/index.js"],"names":["COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","titleStyle","zIndex","extraStyle","right","top","ChartWidget","title","height","xAxis","customOptions","card","type","extra","direction","bodyClass","options","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","DIR_RTL","left","justifyContent","padding","useEffect","useRef","renderChart","onResize","setTimeout","className","ref","defaultProps","Value","props","value","size","CustomStatistic","DataDisplayWidget","icon","color","avatarSize","customStatisticProps","Flex","alignItems","flexDirection","shape","StatisticWidget","status","subtitle","prefix","ArrowUpOutlined","ArrowDownOutlined","Component","Home","gutter","span"],"mappings":"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","file":"static/js/13.171a78b8.chunk.js","sourcesContent":["export const COLOR_1 = '#3e82f7';  // blue\nexport const COLOR_2 = '#04d182';  // cyan\nexport const COLOR_3 = '#ff6b72';  // volcano\nexport const COLOR_4 = '#ffc107';  // gold\nexport const COLOR_5 = '#a461d8';  // purple\nexport const COLOR_6 = '#fa8c16';  // orange\nexport const COLOR_7 = '#17bcff';  // geekblue\n\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\n\nexport const COLORS = [\n\tCOLOR_1,\n\tCOLOR_2,\n\tCOLOR_3,\n\tCOLOR_4,\n\tCOLOR_5,\n\tCOLOR_6,\n\tCOLOR_7\n]\n\nexport const COLORS_LIGHT = [\n\tCOLOR_1_LIGHT,\n\tCOLOR_2_LIGHT,\n\tCOLOR_3_LIGHT,\n\tCOLOR_4_LIGHT,\n\tCOLOR_5_LIGHT,\n\tCOLOR_6_LIGHT,\n\tCOLOR_7_LIGHT\n]\n\nexport const COLOR_AXES = '#edf2f9';\nexport const COLOR_TEXT = '#455560';\n\nexport const apexLineChartDefaultOption = {\n\tchart: {\n\t\tzoom: {\n\t\t\tenabled: false\n\t\t},\n\t\ttoolbar: {\n\t\t\tshow: false\n\t\t}\n\t},\n\tcolors: [...COLORS],\n\tdataLabels: {\n\t\tenabled: false\n\t},\n\tstroke: {\n\t\twidth: 3,\n\t\tcurve: 'smooth',\n\t\tlineCap: 'round'\n\t},\n\tlegend: {\n\t\tposition: 'top',\n\t\thorizontalAlign: 'right',\n\t\toffsetY: -15,\n\t\titemMargin: {\n\t\t\tvertical: 20\n\t\t},\n\t\ttooltipHoverFormatter: function(val, opts) {\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\n\t\t}\n\t},\n\txaxis: {\n\t\tcategories: [],\n\t},\n\tgrid: {\n\t\txaxis: {\n\t\t\tlines: {\n\t\t\t\tshow: true,\n\t\t\t}\n\t\t},\n\t\t  yaxis: {\n\t\t\tlines: {\n\t\t\t  show: false,\n\t\t\t}\n\t\t},\n\t}\n}\n\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\n\nexport const apexBarChartDefaultOption = {\n\tchart: {\n\t\tzoom: {\n\t\t\tenabled: false\n\t\t},\n\t\ttoolbar: {\n\t\t\tshow: false\n\t\t}\n\t},\n\tplotOptions: {\n\t\tbar: {\n\t\t\thorizontal: false,\n\t\t\tcolumnWidth: '25px',\n\t\t\tstartingShapre: 'rounded',\n\t\t\tendingShape: 'rounded'\n\t\t},\n\t},\n\tcolors: [...COLORS],\n\tdataLabels: {\n\t\tenabled: false\n\t},\n\tstroke: {\n\t\tshow: true,\n\t\twidth: 6,\n\t\tcurve: 'smooth',\n\t\tcolors: ['transparent']\n\t},\n\tlegend: {\n\t\tposition: 'top',\n\t\thorizontalAlign: 'right',\n\t\toffsetY: -15,\n\t\tinverseOrder: true,\n\t\titemMargin: {\n\t\t\tvertical: 20\n\t\t},\n\t\ttooltipHoverFormatter: function(val, opts) {\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\n\t\t}\n\t},\n\txaxis: {\n\t\tcategories: [],\n\t},\n\tfill: {\n\t\topacity: 1\n\t},\n\ttooltip: {\n\t\ty: {\n\t\t\tformatter: val => (`${val}`)\n\t\t}\n\t}\n}\n\nexport const apexPieChartDefaultOption = {\n\tcolors: [...COLORS],\n\tplotOptions: {\n\t\tpie: {\n\t\t\tsize: 50,\n\t\t  donut: {\n\t\t\t\tlabels: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\ttotal: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tshowAlways: true,\n\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\tfontSize: '18px',\n\t\t\t\t\t\tfontFamily: 'Roboto',\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tcolor: '#1a3353',\n\t\t\t\t\t\tformatter: function (w) {\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\n\t\t\t\t\t\t\t\treturn a + b\n\t\t\t\t\t\t\t}, 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsize: '87%'\n\t\t  }\n\t\t}\n\t},\n\tlabels: [],\n\tdataLabels: {\n\t\tenabled: false\n\t},\n\tlegend: {\n\t\tshow: false\n\t}\n}\n\nexport const apexSparklineChartDefultOption = {\n\tchart: {\n\t\ttype: 'line',\n\t\tsparkline: {\n\t\t\tenabled: true\n\t\t}\n\t},\n\tstroke: {\n\t\twidth: 2,\n\t\tcurve: 'smooth'\n\t},\n\ttooltip: {\n\t\tfixed: {\n\t\t  \tenabled: false\n\t\t},\n\t\tx: {\n\t\t  \tshow: false\n\t\t},\n\t\ty: {\n\t\t\ttitle: {\n\t\t\t\tformatter: function (seriesName) {\n\t\t\t\t\treturn ''\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmarker: {\n\t\t  show: false\n\t\t}\n\t}\n}","import React, { useRef, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card } from 'antd';\nimport ApexChart from \"react-apexcharts\";\nimport { \n\tapexLineChartDefaultOption, \n\tapexBarChartDefaultOption,\n\tapexAreaChartDefaultOption\n} from '../../../constants/ChartConstant';\nimport ReactResizeDetector from 'react-resize-detector';\nimport { DIR_RTL } from '../../../constants/ThemeConstant';\n\nconst titleStyle = {\n\tposition: 'absolute',\n\tzIndex: '1'\n}\n\nconst extraStyle ={\n\tposition: 'absolute',\n\tzIndex: '1',\n\tright: '0',\n\ttop: '-2px'\n}\n\nconst getChartTypeDefaultOption = type => {\n\tswitch (type) {\n\t\tcase 'line':\n\t\t\treturn apexLineChartDefaultOption\n\t\tcase 'bar':\n\t\t\treturn apexBarChartDefaultOption\n\t\tcase 'area':\n\t\t\treturn apexAreaChartDefaultOption\n\t\tdefault:\n\t\t\treturn apexLineChartDefaultOption;\n\t}\n}\n\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\n\tlet options = getChartTypeDefaultOption(type)\n\tconst isMobile = window.innerWidth < 768 \n\tconst setLegendOffset = () => {\n\t\tif(chartRef.current) {\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\n\t\t\tif(direction === DIR_RTL) {\n\t\t\t\tlengend.style.right = 'auto'\n\t\t\t\tlengend.style.left = '0'\n\t\t\t}\n\t\t\tif (isMobile) {\n\t\t\t\tlengend.style.position = 'relative'\n\t\t\t\tlengend.style.top = 0\n\t\t\t\tlengend.style.justifyContent = 'start';\n\t\t\t\tlengend.style.padding = 0;\n\t\t\t}\n\t\t}\n\t} \n\n\tuseEffect(() => {\n\t\tsetLegendOffset()\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\t\n\tconst extraRef = useRef(null);\n\tconst chartRef = useRef();\n\t\n\toptions.xaxis.categories = xAxis\n\tif(customOptions) {\n\t\toptions = {...options, ...customOptions }\n\t}\n\t\n\tconst onResize = () => {\n\t\tsetTimeout(() => {\n\t\t\tsetLegendOffset()\t\n\t\t}, 600);\n\t}\n\n\tconst renderChart = () => (\n\t\t<ReactResizeDetector onResize={onResize()}>\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\n\t\t\t</div>\n\t\t</ReactResizeDetector>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t{card ? \n\t\t\t\t<Card >\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\n\t\t\t\t\t\t{renderChart()}\n\t\t\t\t\t</div>\n\t\t\t\t</Card> \n\t\t\t\t: \n\t\t\t\trenderChart()\n\t\t\t}\n\t\t</>\n\t)\n}\n\nChartWidget.propTypes = {\n\ttitle: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element\n\t]),\n\tseries: PropTypes.array.isRequired,\n\txAxis: PropTypes.array,\n\tcustomOptions: PropTypes.object,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number\n\t]),\n\theight: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number\n\t]),\n\tcard: PropTypes.bool,\n\ttype: PropTypes.string,\n\textra: PropTypes.element,\n\tbodyClass: PropTypes.string\n}\n\nChartWidget.defaultProps = {\n\tseries: [],\n\theight: 300,\n\twidth: '100%',\n\tcard: true,\n\ttype: 'line'\n};\n\nexport default ChartWidget\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Value = props => {\n\tlet value;\n\tswitch(props.size) {\n\t\tcase 'lg':\n\t\t\tvalue = <h1 className=\"mb-0 font-weight-bold\">{props.value}</h1>\n\t\t\tbreak;\n\t\tcase 'md':\n\t\t\tvalue = <h2 className=\"mb-0 font-weight-bold\">{props.value}</h2>\n\t\t\tbreak;\n\t\tcase 'sm':\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\n\t}\n\treturn value\n}\n\nexport const CustomStatistic = props => {\n\tconst { size, value, title } = props;\n\treturn (\n\t\t<div>\n\t\t\t<Value value={value} size={size}/>\n\t\t\t<p className=\"mb-0 text-muted\">{title}</p>\n\t\t</div>\n\t)\n}\n\nCustomStatistic.propTypes = {\n\ttitle: PropTypes.string,\n\tsize: PropTypes.string,\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number\n\t]),\n}\n\nCustomStatistic.defaultProps = {\n\tsize: 'md'\n};\n\n\nexport default CustomStatistic\n","import React from 'react'\nimport { Card, Avatar } from 'antd'\nimport Flex from '../Flex'\nimport CustomStatistic from '../CustomStatistic'\n\nconst DataDisplayWidget = props => {\n\tconst { size, value, title, icon, color, avatarSize, vertical } = props\n\tconst customStatisticProps = { size, value, title }\n\treturn (\n\t\t<Card>\n\t\t\t<Flex alignItems=\"center\" flexDirection={vertical ? 'column' : 'row'}>\n\t\t\t\t<Avatar size={avatarSize} shape=\"square\" icon={icon} className={`ant-avatar-${color}`}/>\n\t\t\t\t<div className={vertical ? 'mt-3 text-center' : 'ml-3'}>\n\t\t\t\t\t<CustomStatistic {...customStatisticProps}/>\n\t\t\t\t</div>\n\t\t\t</Flex>\n\t\t</Card>\n\t)\n}\n\nDataDisplayWidget.defaultProps = {\n\tavatarSize: 50,\n\tvertical: false\n};\n\nexport default DataDisplayWidget\n","import React from 'react'\nimport { Card } from 'antd';\nimport PropTypes from \"prop-types\";\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst StatisticWidget = ({ title, value, status, subtitle, prefix }) => {\n\treturn (\n\t\t<Card>\n\t\t\t{title && <h4 className=\"mb-0\">{title}</h4>}\n\t\t\t<div className={`${prefix? 'd-flex': ''} ${title ? 'mt-3':''}`}>\n\t\t\t\t{prefix ? <div className=\"mr-2\">{prefix}</div> : null}\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t<h1 className=\"mb-0 font-weight-bold\">{value}</h1>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus ? \n\t\t\t\t\t\t\t<span className={`font-size-md font-weight-bold ml-3 ${status !== 0 && status > 0 ? 'text-success' : 'text-danger'}`} >\n\t\t\t\t\t\t\t\t{status}\n\t\t\t\t\t\t\t\t{status !== 0 && status > 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\n\t\t\t\t\t\t\t</span> \n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t{subtitle && <div className=\"text-gray-light mt-1\">{subtitle}</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Card>\n\t)\n}\n\nStatisticWidget.propTypes = {\n  \ttitle: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element\n\t]),\n\tvalue: PropTypes.string,\n\tsubtitle: PropTypes.string,\n\tstatus: PropTypes.number,\n\tprefix: PropTypes.element\n};\n\nexport default StatisticWidget","import React, { Component } from \"react\";\nimport Frame from 'react-frame-component';\n\nexport class DemoFrame extends Component {\n  render() {\n    return (\n\t\t\t<Frame \n\t\t\t\tstyle={{height : `${this.props.height? this.props.height: '200px'}`}} \n\t\t\t\thead={<link type='text/css' rel='stylesheet' href='/css/light-theme.css'/>}\n\t\t\t>\n\t\t\t\t<div className={this.props.className}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</Frame>\n\t\t);\n  }\n}\n\nexport default DemoFrame;\n","import React from 'react'\nimport ChartWidget from '../../../components/shared-components/ChartWidget'; //../../components/shared-components/ChartWidget\nimport DataDisplayWidget from '../../../components/shared-components/DataDisplayWidget';\nimport StatisticWidget from '../../../components/shared-components/StatisticWidget';\nimport DemoFrame from '../../../components/util-components/DemoFrame';\nimport { Col, Row } from 'antd';\n\nconst Home = () => (\n\t<div>\n\t\t<Row gutter={[16, 16]}>\n\t\t\t<Col span={8}><StatisticWidget title={\"Inkomen\"} value={3289} status={3114} subtitle={\"Deze maand\"} /></Col>\n\t\t\t<Col span={8}><StatisticWidget title={\"Aantal bestellingen\"} value={19} status={-123} subtitle={\"Deze maand\"} /></Col>\n\t\t</Row>\n\t\t<ChartWidget />\n\t</div>\n)\n\nexport default Home\n"],"sourceRoot":""}